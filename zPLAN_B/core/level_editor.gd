extends Node2D

# set this constant before game starts
const in_edit_mode: bool = false
var current_level_name = "TRANSition"


var fk_fall_time: float = 2.2
var fk_output_arr = [[], [], [], []]

var level_info = {
	"TRANSition" = {
		"fk_times": "[[3.52800016403198, 3.52800016403198, 3.52800016403198, 3.52800016403198, 4.02933340072632, 4.02933340072632, 4.02933340072632, 4.02933340072632, 6.51466636657715, 6.51466636657715, 6.51466636657715, 6.51466636657715, 7.02666645050049, 7.02666645050049, 7.02666645050049, 7.02666645050049, 7.2399995803833, 7.2399995803833, 7.2399995803833, 7.2399995803833, 7.51733379364014, 7.51733379364014, 7.51733379364014, 7.51733379364014, 8.03999977111816, 8.03999977111816, 8.03999977111816, 8.03999977111816, 10.5146663665771, 10.5146663665771, 10.5146663665771, 10.5146663665771, 10.7173336029053, 10.7173336029053, 10.7173336029053, 10.7173336029053, 10.9840000152588, 10.9840000152588, 10.9840000152588, 10.9840000152588, 11.4639995574951, 11.4639995574951, 11.4639995574951, 11.4639995574951, 11.6773336410522, 11.6773336410522, 11.6773336410522, 11.6773336410522, 11.9333332061768, 11.9333332061768, 11.9333332061768, 11.9333332061768, 40.3919990539551, 40.3919990539551, 40.3919990539551, 40.3919990539551], [14.5040004730225, 14.5040004730225, 14.5040004730225, 14.5040004730225, 14.6320007324219, 14.6320007324219, 14.6320007324219, 14.6320007324219, 14.8879993438721, 14.8879993438721, 14.8879993438721, 14.8879993438721, 15.0159996032715, 15.0159996032715, 15.0159996032715, 15.0159996032715, 15.2933338165283, 15.2933338165283, 15.2933338165283, 15.2933338165283, 15.5493324279785, 15.5493324279785, 15.5493324279785, 15.5493324279785, 15.7093341827393, 15.7093341827393, 15.7093341827393, 15.7093341827393, 15.9482715606689, 15.9546669006348, 15.9546669006348, 15.9546669006348, 16.0933330535889, 16.0933330535889, 16.0933330535889, 16.0933330535889, 16.3066661834717, 16.3066661834717, 16.3066661834717, 16.3066661834717, 26.5573337554932, 26.5573337554932, 26.5573337554932, 26.5573337554932, 26.749333190918, 26.749333190918, 26.749333190918, 26.749333190918, 26.9733341217041, 26.9733341217041, 26.9733341217041, 26.9733341217041, 27.1866672515869, 27.1866672515869, 27.1866672515869, 27.1866672515869, 27.3893325805664, 27.3893325805664, 27.3893325805664, 27.3893325805664, 27.6133335113525, 27.6133335113525, 27.6133335113525, 27.6133335113525, 27.8266666412354, 27.8266666412354, 27.8266666412354, 27.8266666412354, 28.0613334655762, 28.0613334655762, 28.0613334655762, 28.0613334655762, 28.274666595459, 28.274666595459, 28.274666595459, 28.274666595459, 31.0266654968262, 31.0266654968262, 31.0266654968262, 31.0266654968262, 31.9119995117188, 31.9119995117188, 31.9119995117188, 31.9119995117188, 34.6320007324219, 34.6320007324219, 34.6320007324219, 34.6320007324219, 34.8666656494141, 34.8666656494141, 34.8666656494141, 34.8666656494141, 35.0586669921875, 35.0586669921875, 35.0586669921875, 35.0586669921875, 35.2293327331543, 35.2293327331543, 35.2293327331543, 35.2293327331543, 35.3999984741211, 35.3999984741211, 35.3999984741211, 35.3999984741211, 35.5280006408691, 35.5280006408691, 35.5280006408691, 35.5280006408691, 35.6773345947266, 35.6773345947266, 35.6773345947266, 35.6773345947266, 35.826668548584, 35.826668548584, 35.826668548584, 35.826668548584, 35.9759986877441, 35.9759986877441, 35.9759986877441, 35.9759986877441, 36.1146667480469, 36.1146667480469, 36.1146667480469, 36.1146667480469, 36.2853324890137, 36.2853324890137, 36.2853324890137, 36.2853324890137, 36.4559982299805, 36.4559982299805, 36.4559982299805, 36.4559982299805], [18.792000579834, 18.792000579834, 18.792000579834, 18.792000579834, 19.0373332977295, 19.0373332977295, 19.0373332977295, 19.0373332977295, 19.2186668395996, 19.2186668395996, 19.2186668395996, 19.2186668395996, 19.4319999694824, 19.4319999694824, 19.4319999694824, 19.4319999694824, 19.76266746521, 19.76266746521, 19.76266746521, 19.76266746521, 19.9119995117188, 19.9119995117188, 19.9119995117188, 19.9119995117188, 20.0613334655762, 20.0613334655762, 20.0613334655762, 20.0613334655762, 20.2640007019043, 20.2640007019043, 20.2640007019043, 20.2640007019043, 20.5840003967285, 20.5840003967285, 20.5840003967285, 20.5840003967285, 26.5679996490479, 26.5679996490479, 26.5679996490479, 26.5679996490479, 26.770666885376, 26.770666885376, 26.770666885376, 26.770666885376, 26.9840000152588, 26.9840000152588, 26.9840000152588, 26.9840000152588, 27.1866672515869, 27.1866672515869, 27.1866672515869, 27.1866672515869, 27.4106662750244, 27.4106662750244, 27.4106662750244, 27.4106662750244, 27.6346672058105, 27.6346672058105, 27.6346672058105, 27.6346672058105, 27.8480003356934, 27.8480003356934, 27.8480003356934, 27.8480003356934, 28.0826671600342, 28.0826671600342, 28.0826671600342, 28.0826671600342, 28.2853324890137, 28.2853324890137, 28.2853324890137, 28.2853324890137, 31.6559989929199, 31.6559989929199, 31.6559989929199, 31.6559989929199, 34.5039985656738, 34.5039985656738, 34.5039985656738, 34.5039985656738, 34.7599990844727, 34.7599990844727, 34.7599990844727, 34.7599990844727, 34.9733322143555, 34.9733322143555, 34.9733322143555, 34.9733322143555, 35.1546676635742, 35.1546676635742, 35.1546676635742, 35.1546676635742, 35.3146675109863, 35.3146675109863, 35.3146675109863, 35.3146675109863, 35.5706680297852, 35.5706680297852, 35.5706680297852, 35.5706680297852, 35.7306678771973, 35.7306678771973, 35.7306678771973, 35.7306678771973, 35.9013336181641, 35.9013336181641, 35.9013336181641, 35.9013336181641, 36.2000015258789, 36.2000015258789, 36.2000015258789, 36.2000015258789, 36.5093315124512, 36.5093315124512, 36.5093315124512, 36.5093315124512], [22.813334274292, 22.813334274292, 22.813334274292, 22.813334274292, 23.2613342285156, 23.2613342285156, 23.2613342285156, 23.2613342285156, 23.3893325805664, 23.3893325805664, 23.3893325805664, 23.3893325805664, 23.5280006408691, 23.5280006408691, 23.5280006408691, 23.5280006408691, 23.7733333587646, 23.7733333587646, 23.7733333587646, 23.7733333587646, 23.9866664886475, 23.9866664886475, 23.9866664886475, 23.9866664886475, 24.1786659240723, 24.1786659240723, 24.1786659240723, 24.1786659240723, 24.3919990539551, 24.3919990539551, 24.3919990539551, 24.3919990539551, 26.5679996490479, 26.5679996490479, 26.5679996490479, 26.5679996490479, 26.7813327789307, 26.7813327789307, 26.7813327789307, 26.7813327789307, 27.0159996032715, 27.0159996032715, 27.0159996032715, 27.0159996032715, 27.1973331451416, 27.1973331451416, 27.1973331451416, 27.1973331451416, 27.4106662750244, 27.4106662750244, 27.4106662750244, 27.4106662750244, 27.6560009002686, 27.6560009002686, 27.6560009002686, 27.6560009002686, 27.858666229248, 27.858666229248, 27.858666229248, 27.858666229248, 28.0826671600342, 28.0826671600342, 28.0826671600342, 28.0826671600342, 28.296000289917, 28.296000289917, 28.296000289917, 28.296000289917, 30.792000579834, 30.792000579834, 30.792000579834, 30.792000579834, 32.2213333129883, 32.2213333129883, 32.2213333129883, 32.2213333129883, 35.3893325805664, 35.3893325805664, 35.3893325805664, 35.3893325805664, 36.0293319702148, 36.0293319702148, 36.0293319702148, 36.0293319702148, 36.3706672668457, 36.3706672668457, 36.3706672668457, 36.3706672668457]]",
		"music": preload("res://zPLAN_B/MUSIC/Rhythm Hell.wav")#preload("res://zPLAN_B/MUSIC/gamejamtest2 (1).mp3")
	}
}

func _ready():
	
	$MusicPlayer.stream = level_info.get(current_level_name).get("music")
	$MusicPlayer.play()
	

	if in_edit_mode:
		Signals.KeyListenerPress.connect(KeyListenerPress)
	else:
		var fk_times = level_info.get(current_level_name).get("fk_times")
		var fk_times_arr = str_to_var(fk_times)
		#print(fk_times_arr[0])
		
		var counter: int = 0
		for key in fk_times_arr:
			
			var button_name: String = ""
			match counter:
				0:
					button_name = "button_A"
				1: 
					button_name = "button_S"
				2:
					button_name = "button_K"
				3:
					button_name = "button_L"
			
			for delay in key:
				SpawnFallingKey(button_name, delay)
			
			counter += 1
	
func KeyListenerPress(button_name: String, array_num: int):
	print(str(array_num) + " " + str($MusicPlayer.get_playback_position()))
	fk_output_arr[array_num].append($MusicPlayer.get_playback_position() - fk_fall_time)
	
func SpawnFallingKey(button_name: String, delay: float):
	await get_tree().create_timer(delay).timeout
	Signals.CreateFallingKey.emit(button_name)



func _on_music_player_finished():
	print(fk_output_arr)
