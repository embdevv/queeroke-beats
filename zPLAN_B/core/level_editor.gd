extends Node2D

# set this constant before game starts
const in_edit_mode: bool = false
var current_level_name = "TRANSition"

var fk_fall_time: float = 2.2
var fk_output_arr = [[], [], [], []]

var level_info = {
	"TRANSition" = {
		"fk_times": "[[10.5466669082642, 10.5466669082642, 10.5466669082642, 10.5466669082642, 19.0693328857422, 19.0693328857422, 19.0693328857422, 19.0693328857422, 19.9546669006348, 19.9546669006348, 19.9546669006348, 19.9546669006348, 26.5253341674805, 26.5253341674805, 26.5253341674805, 26.5253341674805, 26.7599990844727, 26.7599990844727, 26.7599990844727, 26.7599990844727, 26.9946659088135, 26.9946659088135, 26.9946659088135, 26.9946659088135, 27.2293327331543, 27.2293327331543, 27.2293327331543, 27.2293327331543, 27.4426658630371, 27.4426658630371, 27.4426658630371, 27.4426658630371, 27.6666667938232, 27.6666667938232, 27.6666667938232, 27.6666667938232, 27.8693340301514, 27.8693340301514, 27.8693340301514, 27.8693340301514, 28.0933330535889, 28.0933330535889, 28.0933330535889, 28.0933330535889, 28.317333984375, 28.317333984375, 28.317333984375, 28.317333984375, 31.9973342895508, 31.9973342895508, 31.9973342895508, 31.9973342895508, 35.5280006408691, 35.5280006408691, 35.5280006408691, 35.5280006408691, 40.4559982299805, 40.4559982299805, 40.4559982299805, 40.4559982299805], [6.54666690826416, 6.54666690826416, 6.54666690826416, 6.54666690826416, 7.30399971008301, 7.30399971008301, 7.30399971008301, 7.30399971008301, 8.07200031280518, 8.07200031280518, 8.07200031280518, 8.07200031280518, 11.0693328857422, 11.0693328857422, 11.0693328857422, 11.0693328857422, 11.8266666412354, 11.8266666412354, 11.8266666412354, 11.8266666412354, 14.5679996490479, 14.5679996490479, 14.5679996490479, 14.5679996490479, 14.706665802002, 14.706665802002, 14.706665802002, 14.706665802002, 14.9626663208008, 14.9626663208008, 14.9626663208008, 14.9626663208008, 15.0800006866455, 15.0800006866455, 15.0800006866455, 15.0800006866455, 15.3359992980957, 15.3359992980957, 15.3359992980957, 15.3359992980957, 15.5706661224365, 15.5706661224365, 15.5706661224365, 15.5706661224365, 15.6986663818359, 15.6986663818359, 15.6986663818359, 15.6986663818359, 15.9333332061768, 15.9333332061768, 15.9333332061768, 15.9333332061768, 16.0613334655762, 16.0613334655762, 16.0613334655762, 16.0613334655762, 16.296000289917, 16.296000289917, 16.296000289917, 16.296000289917, 19.4426658630371, 19.4426658630371, 19.4426658630371, 19.4426658630371, 20.2213333129883, 20.2213333129883, 20.2213333129883, 20.2213333129883, 23.4426658630371, 23.4426658630371, 23.4426658630371, 23.4426658630371, 23.7839992523193, 23.7839992523193, 23.7839992523193, 23.7839992523193, 24.1786659240723, 24.1786659240723, 24.1786659240723, 24.1786659240723, 31.0480010986328, 31.0480010986328, 31.0480010986328, 31.0480010986328, 34.5680015563965, 34.5680015563965, 34.5680015563965, 34.5680015563965, 34.7280014038086, 34.7280014038086, 34.7280014038086, 34.7280014038086, 34.8666656494141, 34.8666656494141, 34.8666656494141, 34.8666656494141, 34.9946678161621, 34.9946678161621, 34.9946678161621, 34.9946678161621, 35.1333320617676, 35.1333320617676, 35.1333320617676, 35.1333320617676, 35.2720001220703, 35.2720001220703, 35.2720001220703, 35.2720001220703, 35.7093322753906, 35.7093322753906, 35.7093322753906, 35.7093322753906, 35.9119995117187, 35.9119995117187, 35.9119995117187, 35.9119995117187, 36.1253326416016, 36.1253326416016, 36.1253326416016, 36.1253326416016, 36.3279998779297, 36.3279998779297, 36.3279998779297, 36.3279998779297, 36.4879997253418, 36.4879997253418, 36.4879997253418, 36.4879997253418, 40.4559982299805, 40.4559982299805, 40.4559982299805, 40.4559982299805], [2.56800012588501, 2.56800012588501, 2.56800012588501, 2.56800012588501, 3.0480001449585, 3.0480001449585, 3.0480001449585, 3.0480001449585, 3.57066659927368, 3.57066659927368, 3.57066659927368, 3.57066659927368, 4.07199983596802, 4.07199983596802, 4.07199983596802, 4.07199983596802, 10.781333732605, 10.781333732605, 10.781333732605, 10.781333732605, 12.0933330535889, 12.0933330535889, 12.0933330535889, 12.0933330535889, 14.5573337554932, 14.5573337554932, 14.5573337554932, 14.5573337554932, 14.706665802002, 14.706665802002, 14.706665802002, 14.706665802002, 14.9626663208008, 14.9626663208008, 14.9626663208008, 14.9626663208008, 15.0906665802002, 15.0906665802002, 15.0906665802002, 15.0906665802002, 15.325333404541, 15.325333404541, 15.325333404541, 15.325333404541, 15.5600002288818, 15.5600002288818, 15.5600002288818, 15.5600002288818, 15.6986663818359, 15.6986663818359, 15.6986663818359, 15.6986663818359, 15.9333332061768, 15.9333332061768, 15.9333332061768, 15.9333332061768, 16.0719993591309, 16.0719993591309, 16.0719993591309, 16.0719993591309, 16.296000289917, 16.296000289917, 16.296000289917, 16.296000289917, 19.2293327331543, 19.2293327331543, 19.2293327331543, 19.2293327331543, 20.0506675720215, 20.0506675720215, 20.0506675720215, 20.0506675720215, 20.4133327484131, 20.4133327484131, 20.4133327484131, 20.4133327484131, 22.8453338623047, 22.8453338623047, 22.8453338623047, 22.8453338623047, 23.5706661224365, 23.5706661224365, 23.5706661224365, 23.5706661224365, 23.9866664886475, 23.9866664886475, 23.9866664886475, 23.9866664886475, 24.3919990539551, 24.3919990539551, 24.3919990539551, 24.3919990539551, 30.7813346862793, 30.7813346862793, 30.7813346862793, 30.7813346862793, 32.2959983825684, 32.2959983825684, 32.2959983825684, 32.2959983825684, 34.5360000610352, 34.5360000610352, 34.5360000610352, 34.5360000610352, 34.7280014038086, 34.7280014038086, 34.7280014038086, 34.7280014038086, 34.8880012512207, 34.8880012512207, 34.8880012512207, 34.8880012512207, 35.0373352050781, 35.0373352050781, 35.0373352050781, 35.0373352050781, 35.1866653442383, 35.1866653442383, 35.1866653442383, 35.1866653442383, 35.325333404541, 35.325333404541, 35.325333404541, 35.325333404541, 35.6240013122559, 35.6240013122559, 35.6240013122559, 35.6240013122559, 35.8373344421387, 35.8373344421387, 35.8373344421387, 35.8373344421387, 36.0186660766602, 36.0186660766602, 36.0186660766602, 36.0186660766602, 36.2106674194336, 36.2106674194336, 36.2106674194336, 36.2106674194336, 36.3919990539551, 36.3919990539551, 36.3919990539551, 36.3919990539551, 36.6800010681152, 36.6800010681152, 36.6800010681152, 36.6800010681152, 40.4773338317871, 40.4773338317871, 40.4773338317871, 40.4773338317871], [7.0906665802002, 7.0906665802002, 7.0906665802002, 7.0906665802002, 7.57066707611084, 7.57066707611084, 7.57066707611084, 7.57066707611084, 11.5919998168945, 11.5919998168945, 11.5919998168945, 11.5919998168945, 18.8240001678467, 18.8240001678467, 18.8240001678467, 18.8240001678467, 19.8266666412354, 19.8266666412354, 19.8266666412354, 19.8266666412354, 23.303999710083, 23.303999710083, 23.303999710083, 23.303999710083, 26.5253341674805, 26.5253341674805, 26.5253341674805, 26.5253341674805, 26.7599990844727, 26.7599990844727, 26.7599990844727, 26.7599990844727, 26.9946659088135, 26.9946659088135, 26.9946659088135, 26.9946659088135, 27.2080009460449, 27.2080009460449, 27.2080009460449, 27.2080009460449, 27.4426658630371, 27.4426658630371, 27.4426658630371, 27.4426658630371, 27.6666667938232, 27.6666667938232, 27.6666667938232, 27.6666667938232, 27.8693340301514, 27.8693340301514, 27.8693340301514, 27.8693340301514, 28.0933330535889, 28.0933330535889, 28.0933330535889, 28.0933330535889, 28.3279998779297, 28.3279998779297, 28.3279998779297, 28.3279998779297, 31.6880004882813, 31.6880004882813, 31.6880004882813, 31.6880004882813, 35.4640014648437, 35.4640014648437, 35.4640014648437, 35.4640014648437, 40.4773338317871, 40.4773338317871, 40.4773338317871, 40.4773338317871]]",
		"music": preload("res://zPLAN_B/MUSIC/Rhythm Hell.wav")#preload("res://zPLAN_B/MUSIC/gamejamtest2 (1).mp3")
	}
}

func _ready():
	
	await get_tree().create_timer(2).timeout
	$MusicPlayer.stream = level_info.get(current_level_name).get("music")
	$MusicPlayer.play()

	if in_edit_mode:
		Signals.KeyListenerPress.connect(KeyListenerPress)
	else:
		var fk_times = level_info.get(current_level_name).get("fk_times")
		var fk_times_arr = str_to_var(fk_times)
		#print(fk_times_arr[0])
		
		var counter: int = 0
		for key in fk_times_arr:
			
			var button_name: String = ""
			match counter:
				0:
					button_name = "button_A"
				1: 
					button_name = "button_S"
				2:
					button_name = "button_K"
				3:
					button_name = "button_L"
			
			for delay in key:
				SpawnFallingKey(button_name, delay)
			
			counter += 1

func KeyListenerPress(button_name: String, array_num: int):
	print(str(array_num) + " " + str($MusicPlayer.get_playback_position()))
	fk_output_arr[array_num].append($MusicPlayer.get_playback_position() - fk_fall_time)
	
func SpawnFallingKey(button_name: String, delay: float):
	await get_tree().create_timer(delay).timeout
	Signals.CreateFallingKey.emit(button_name)


func _on_music_player_finished():
	print(fk_output_arr)
